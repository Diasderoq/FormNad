<list>
  <ProcessDefinition>
    <processDefinitionPK>
      <companyId>1</companyId>
      <processId>NAD e NCL</processId>
    </processDefinitionPK>
    <processDescription>NAD e NCL</processDescription>
    <instruction></instruction>
    <active>true</active>
    <publicProcess>false</publicProcess>
    <volumeId>Default</volumeId>
    <categoryId>Área Médica</categoryId>
    <managerEngineAllocationId></managerEngineAllocationId>
    <snapshotFrequency>0</snapshotFrequency>
    <baseDay>0</baseDay>
    <baseMonth>0</baseMonth>
    <periodId>Default</periodId>
    <uniqueCardVersion>false</uniqueCardVersion>
    <keyWord></keyWord>
    <complementsLevel>0</complementsLevel>
    <notifyRequisitionerComplements>true</notifyRequisitionerComplements>
    <notifyManagerComplements>false</notifyManagerComplements>
    <deadlineTime>0</deadlineTime>
    <warningDeadlineTime>0</warningDeadlineTime>
    <notifyAuthorityComplements>true</notifyAuthorityComplements>
  </ProcessDefinition>
  <ProcessDefinitionVersion>
    <processDefinitionVersionPK>
      <companyId>1</companyId>
      <processId>NAD e NCL</processId>
      <version>127</version>
    </processDefinitionVersionPK>
    <versionDescription></versionDescription>
    <formId>33579</formId>
    <editionMode>true</editionMode>
    <updateAttachmentsVersion>false</updateAttachmentsVersion>
    <controlsAttachmentsSecurity>false</controlsAttachmentsSecurity>
    <active>true</active>
    <blockedVersion>false</blockedVersion>
    <counterSign>false</counterSign>
    <openInstances>0</openInstances>
    <bpmnVersion>2</bpmnVersion>
    <processStates/>
    <favorito>false</favorito>
    <inheritFormSecurity>false</inheritFormSecurity>
    <mobileReady>true</mobileReady>
  </ProcessDefinitionVersion>
  <list>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>7</sequence>
      </processStatePK>
      <stateName>Início</stateName>
      <stateDescription>Início</stateDescription>
      <instruction></instruction>
      <deadlineTime>60</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>true</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>60</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>60</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>90</positionX>
      <positionY>60</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>60</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>60</allowanceManagerTime>
      <frequenceManagerTime>60</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>10</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>60</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>60</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>60</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>18</sequence>
      </processStatePK>
      <stateName>Coordenação Medica</stateName>
      <stateDescription>Coordenação Medica</stateDescription>
      <instruction></instruction>
      <deadlineTime>60</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Coordenação Medica -NAD e NCL&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>60</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>60</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>350</positionX>
      <positionY>320</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>60</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>60</allowanceManagerTime>
      <frequenceManagerTime>60</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>60</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>60</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>60</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>19</sequence>
      </processStatePK>
      <stateName>Area Medica</stateName>
      <stateDescription>Area Medica</stateDescription>
      <instruction></instruction>
      <deadlineTime>60</deadlineTime>
      <deadlineFieldName></deadlineFieldName>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId>Pool Grupo</engineAllocationId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Area Medica - NAD e NCL&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <selectColleague>1</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>3600</allowanceAuthorityTime>
      <frequenceAuthorityTime>3600</frequenceAuthorityTime>
      <allowanceRequisitionerTime>60</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>60</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>true</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>190</positionX>
      <positionY>204</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>60</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>60</allowanceManagerTime>
      <frequenceManagerTime>60</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>80</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <noticeExpirationAuthorityTime>60</noticeExpirationAuthorityTime>
      <noticeExpirationRequisitionerTime>60</noticeExpirationRequisitionerTime>
      <noticeExpirationManagerTime>60</noticeExpirationManagerTime>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
      <executionType>0</executionType>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>8</sequence>
      </processStatePK>
      <stateName>Volta para o solicitante</stateName>
      <stateDescription>Volta para o solicitante</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>210</positionX>
      <positionY>20</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>21</sequence>
      </processStatePK>
      <stateName>Seguir com o processo</stateName>
      <stateDescription>Seguir com o processo</stateDescription>
      <joint>false</joint>
      <initialState>false</initialState>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <automatic>true</automatic>
      <positionX>370</positionX>
      <positionY>181</positionY>
      <inhibitTransfer>false</inhibitTransfer>
      <stateType>1</stateType>
      <bpmnType>120</bpmnType>
      <signalId>0</signalId>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
    <ProcessState>
      <processStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>23</sequence>
      </processStatePK>
      <stateName>Fim</stateName>
      <stateDescription>Fim</stateDescription>
      <instruction>Atividade final do processo</instruction>
      <deadlineTime>0</deadlineTime>
      <joint>false</joint>
      <agreementPercentage>0</agreementPercentage>
      <engineAllocationId></engineAllocationId>
      <engineAllocationConfiguration></engineAllocationConfiguration>
      <selectColleague>0</selectColleague>
      <initialState>false</initialState>
      <notifyAuthorityDelay>true</notifyAuthorityDelay>
      <notifyRequisitionerDelay>false</notifyRequisitionerDelay>
      <allowanceAuthorityTime>0</allowanceAuthorityTime>
      <frequenceAuthorityTime>1</frequenceAuthorityTime>
      <allowanceRequisitionerTime>0</allowanceRequisitionerTime>
      <frequenceRequisitionerTime>0</frequenceRequisitionerTime>
      <transferAttachments>false</transferAttachments>
      <subProcessId></subProcessId>
      <formFolder>0</formFolder>
      <notifyAuthorityFollowUp>false</notifyAuthorityFollowUp>
      <notifyRequisitionerFollowUp>false</notifyRequisitionerFollowUp>
      <automatic>false</automatic>
      <positionX>530</positionX>
      <positionY>214</positionY>
      <forecastedEffortType>0</forecastedEffortType>
      <forecastedEffort>0</forecastedEffort>
      <notifyManagerFollowUp>false</notifyManagerFollowUp>
      <notifyManagerDelay>false</notifyManagerDelay>
      <allowanceManagerTime>0</allowanceManagerTime>
      <frequenceManagerTime>0</frequenceManagerTime>
      <inhibitTransfer>false</inhibitTransfer>
      <periodId></periodId>
      <stateType>0</stateType>
      <bpmnType>60</bpmnType>
      <signalId>0</signalId>
      <counterSign>false</counterSign>
      <openInstances>0</openInstances>
      <destinationStates/>
      <digitalSignature>false</digitalSignature>
    </ProcessState>
  </list>
  <list>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>1</expressionOrder>
        <version>127</version>
        <sequence>8</sequence>
      </conditionProcessStatePK>
      <condition>ValidaAnexo()</condition>
      <destinationSequenceId>19</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Area Medica - NAD e NCL&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Grupo</engineAllocationId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>2</expressionOrder>
        <version>127</version>
        <sequence>8</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;AtivAtual&quot;)  == &quot;&quot;  &amp;&amp; hAPI.getCardValue(&quot;AtivDest&quot;)  == &quot;&quot;</condition>
      <destinationSequenceId>19</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Area Medica - NAD e NCL&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Grupo</engineAllocationId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>3</expressionOrder>
        <version>127</version>
        <sequence>8</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;AtivAtual&quot;)  == &quot;19&quot;  &amp;&amp; hAPI.getCardValue(&quot;AtivDest&quot;)  == &quot;19&quot;</condition>
      <destinationSequenceId>7</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;Requerente&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Campo Formulário</engineAllocationId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>4</expressionOrder>
        <version>127</version>
        <sequence>8</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;AtivAtual&quot;)  == &quot;18&quot;  &amp;&amp; hAPI.getCardValue(&quot;AtivDest&quot;)  == &quot;19&quot;</condition>
      <destinationSequenceId>7</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;Requerente&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Campo Formulário</engineAllocationId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>5</expressionOrder>
        <version>127</version>
        <sequence>8</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;AtivAtual&quot;)  == &quot;8&quot;  &amp;&amp; hAPI.getCardValue(&quot;AtivDest&quot;)  == &quot;19&quot;</condition>
      <destinationSequenceId>7</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;FormField&gt;Requerente&lt;/FormField&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Campo Formulário</engineAllocationId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>6</expressionOrder>
        <version>127</version>
        <sequence>8</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;AtivAtual&quot;)  == &quot;8&quot;  &amp;&amp; hAPI.getCardValue(&quot;AtivDest&quot;)  == &quot;7&quot;</condition>
      <destinationSequenceId>19</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Area Medica - NAD e NCL&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Grupo</engineAllocationId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>1</expressionOrder>
        <version>127</version>
        <sequence>21</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;TIPO&quot;) == &quot;NADSemLaudo&quot;</condition>
      <destinationSequenceId>23</destinationSequenceId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>2</expressionOrder>
        <version>127</version>
        <sequence>21</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;TIPO&quot;) == &quot;NCL&quot;</condition>
      <destinationSequenceId>18</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Coordenação Medica -NAD e NCL&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Grupo</engineAllocationId>
    </ConditionProcessState>
    <ConditionProcessState>
      <conditionProcessStatePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <expressionOrder>3</expressionOrder>
        <version>127</version>
        <sequence>21</sequence>
      </conditionProcessStatePK>
      <condition>hAPI.getCardValue(&quot;TIPO&quot;) == &quot;NADComLaudo&quot;</condition>
      <destinationSequenceId>18</destinationSequenceId>
      <engineAllocationConfiguration>&lt;AssignmentController&gt;&lt;Group&gt;Coordenação Medica -NAD e NCL&lt;/Group&gt;&lt;/AssignmentController&gt;</engineAllocationConfiguration>
      <engineAllocationId>Pool Grupo</engineAllocationId>
    </ConditionProcessState>
  </list>
  <list>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>9</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>7</initialStateSequence>
      <finalStateSequence>8</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>20</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>8</initialStateSequence>
      <finalStateSequence>19</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>22</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>19</initialStateSequence>
      <finalStateSequence>21</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>24</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>21</initialStateSequence>
      <finalStateSequence>23</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>25</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>21</initialStateSequence>
      <finalStateSequence>18</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>26</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>19</initialStateSequence>
      <finalStateSequence>8</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>27</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>19</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
      <expression></expression>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>28</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>18</initialStateSequence>
      <finalStateSequence>23</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
    <ProcessLink>
      <processLinkPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <linkSequence>29</linkSequence>
      </processLinkPK>
      <actionLabel></actionLabel>
      <returnPermited>false</returnPermited>
      <initialStateSequence>8</initialStateSequence>
      <finalStateSequence>7</finalStateSequence>
      <returnLabel></returnLabel>
      <name></name>
      <automaticLink>false</automaticLink>
      <defaultLink>false</defaultLink>
      <type>0</type>
    </ProcessLink>
  </list>
  <list/>
  <list>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterProcessCreate</eventId>
        <processId>NAD e NCL</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterProcessCreate(processId){&#xd;
	&#xd;
	&#xd;
	 	var dataAtual = new Date();&#xd;
		var txtData = (dataAtual.getDate()&lt;10?&quot;0&quot;+dataAtual.getDate():dataAtual.getDate()) + &quot;/&quot; + ((dataAtual.getMonth()+1)&lt;10?&quot;0&quot;+(dataAtual.getMonth()+1):(dataAtual.getMonth()+1)) + &quot;/&quot; + dataAtual.getFullYear();&#xd;
		var txtHora = dataAtual.getHours() + &quot;:&quot; + dataAtual.getMinutes();&#xd;
		hAPI.setCardValue(&quot;TxtDataSolic_C&quot;,txtData + &quot; &quot; + txtHora);&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	var currentUser = getValue(&quot;WKUser&quot;);&#xd;
	&#xd;
		&#xd;
	hAPI.setCardValue(&quot;Requerente&quot;,currentUser);&#xd;
	&#xd;
	var currentUser = getValue(&quot;WKUser&quot;);&#xd;
	var proximaAtividade = getValue(&quot;WKNextState&quot;);&#xd;
	var Atividadeatual = getValue(&quot;WKNumState&quot;);&#xd;
	&#xd;
	&#xd;
	&#xd;
	hAPI.setCardValue(&quot;TxtResponsavel_Ncl&quot;,currentUser);&#xd;
	hAPI.setCardValue(&quot;AtivAtual&quot;,Atividadeatual);&#xd;
    hAPI.setCardValue(&quot;AtivDest&quot;,proximaAtividade);&#xd;
   &#xd;
	&#xd;
	&#xd;
	&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>ValidaAnexo</eventId>
        <processId>NAD e NCL</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function ValidaAnexo(){&#xd;
	&#xd;
	&#xd;
	&#xd;
	if(hAPI.getCardValue(&quot;TIPO&quot;) == &quot;NADComLaudo&quot;){&#xd;
		&#xd;
		var docs = hAPI.listAttachments();&#xd;
		log.info(&quot;[validarAnexo] docs.size:&quot; + docs.size());&#xd;
		if(docs.size() &lt; 1   ){&#xd;
			throw &quot;Necessário anexar laudo&quot;;&#xd;
		}&#xd;
		&#xd;
		}&#xd;
	&#xd;
	&#xd;
	if(hAPI.getCardValue(&quot;TIPO&quot;) == &quot;NCL&quot;){&#xd;
			&#xd;
			var docs = hAPI.listAttachments();&#xd;
			log.info(&quot;[validarAnexo] docs.size:&quot; + docs.size());&#xd;
			if(docs.size() &lt; 2   ){&#xd;
				throw &quot;Necessário anexar laudo e Carta do Medico&quot;;&#xd;
			}&#xd;
			&#xd;
			}&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
		return false;&#xd;
	&#xd;
	&#xd;
	&#xd;
	&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>beforeStateEntry</eventId>
        <processId>NAD e NCL</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function beforeStateEntry(sequenceId){
	
	var cProxAtividadeFim = getValue(&quot;WKNextState&quot;);
	var cConfirmarEnvioEmailNadCom = hAPI.getCardValue(&quot;RdEmailNad&quot;);
	var cConfirmarEnvioEmailNcl = hAPI.getCardValue(&quot;RdEmailNcl&quot;);
	//log.info(&quot;cConfirmarEnvioEmailNcl &amp;&amp;&amp;&amp;&quot; + cConfirmarEnvioEmailNcl);
	
	if (cProxAtividadeFim == 23 &amp;&amp; (cConfirmarEnvioEmailNadCom == &quot;2&quot; || cConfirmarEnvioEmailNcl == &quot;2&quot;)){
		// Resp tarefa Coordenacao Medica
		var cCoordenacaoMedica = getValue(&quot;WKUser&quot;);

		//Destinatario
		var cMedicoEmailNadCom = hAPI.getCardValue(&quot;HddMedicoEmailNcl&quot;);
		var cMedicoEmailNcl = hAPI.getCardValue(&quot;HddMedicoEmailNadCom&quot;);
		//{medico}
		var cMedicoNadCom = hAPI.getCardValue(&quot;ZoMedicos&quot;);
		var cMedicoNcl = hAPI.getCardValue(&quot;ZoMedicos_A&quot;);
		//{tipo}
		var cTipo = hAPI.getCardValue(&quot;TIPO&quot;);
		if(cTipo == &quot;NADComLaudo&quot;){cTipo = &quot;Nad&quot;}
		if(cTipo == &quot;NCL&quot;){cTipo = &quot;Ncl&quot;}
		//{unidade}
		var cUnidadeNadCom = hAPI.getCardValue(&quot;ZoUnidade&quot;);
		var cUnidadeNcl = hAPI.getCardValue(&quot;ZoUnidadeBlocoB&quot;);
		//{exame}
		var cExameNadCom = hAPI.getCardValue(&quot;ZoExame&quot;);
		var cExameNcl= hAPI.getCardValue(&quot;ZoExame_A&quot;);
		//{matricula}
		var cMatriculaNadCom = hAPI.getCardValue(&quot;TxtMatriculaExame&quot;);
		var cMatriculaNcl = hAPI.getCardValue(&quot;TxtMatriculaExame_A&quot;);
		//{data}
		var dDataNadCom = hAPI.getCardValue(&quot;TxtDataExame&quot;);
		var dDataNcl = hAPI.getCardValue(&quot;TxtDataExame_A&quot;);
		//{divergencia}
		var cDivergenciaNadCom = hAPI.getCardValue(&quot;slcTeor&quot;);
		if (cDivergenciaNadCom == &quot;1&quot;){ cDivergenciaNadCom = &quot;Erro no cadastro&quot; }
		if (cDivergenciaNadCom == &quot;2&quot;){ cDivergenciaNadCom = &quot;Falta conclusão / Opinião&quot; }
		if (cDivergenciaNadCom == &quot;3&quot;){ cDivergenciaNadCom = &quot;Falta de assinatura médica&quot; }
		if (cDivergenciaNadCom == &quot;4&quot;){ cDivergenciaNadCom = &quot;Falta de comparativo&quot; }
		if (cDivergenciaNadCom == &quot;5&quot;){ cDivergenciaNadCom = &quot;Falta titulo / titulo inadequado&quot; }
		if (cDivergenciaNadCom == &quot;6&quot;){ cDivergenciaNadCom = &quot;Frases duplicadas&quot; }
		if (cDivergenciaNadCom == &quot;7&quot;){ cDivergenciaNadCom = &quot;Informação de contraste discrepante&quot; }
		if (cDivergenciaNadCom == &quot;8&quot;){ cDivergenciaNadCom = &quot;Lateralidade&quot; }
		if (cDivergenciaNadCom == &quot;9&quot;){ cDivergenciaNadCom = &quot;Mamografia liberada como 80&quot; }
		if (cDivergenciaNadCom == &quot;10&quot;){ cDivergenciaNadCom = &quot;Prostata em paciente feminino&quot; }
		if (cDivergenciaNadCom == &quot;11&quot;){ cDivergenciaNadCom = &quot;Relatorio em branco&quot; }
		if (cDivergenciaNadCom == &quot;12&quot;){ cDivergenciaNadCom = &quot;Titulo diferente do pedido&quot; }
		if (cDivergenciaNadCom == &quot;13&quot;){ cDivergenciaNadCom = &quot;Utero em paciente masculino&quot; }
		if (cDivergenciaNadCom == &quot;0&quot;){ cDivergenciaNadCom = &quot;&quot; }
		//{classificacao}
		var cClassificacaoNadCom = hAPI.getCardValue(&quot;SlcClassificaSolicitacao&quot;);
		if (cClassificacaoNadCom == &quot;1&quot;){ cClassificacaoNadCom = &quot;Alteração conceitual&quot; }
		if (cClassificacaoNadCom == &quot;2&quot;){ cClassificacaoNadCom = &quot;Alteração de digitação&quot; }
		if (cClassificacaoNadCom == &quot;3&quot;){ cClassificacaoNadCom = &quot;Alteração de expressão&quot; }
		if (cClassificacaoNadCom == &quot;4&quot;){ cClassificacaoNadCom = &quot;Alteração de lateralidade&quot; }
		if (cClassificacaoNadCom == &quot;5&quot;){ cClassificacaoNadCom = &quot;Alteração de mascara&quot; }
		if (cClassificacaoNadCom == &quot;6&quot;){ cClassificacaoNadCom = &quot;Erro da unidade&quot; }
		if (cClassificacaoNadCom == &quot;7&quot;){ cClassificacaoNadCom = &quot;Não procedente&quot; }
		if (cClassificacaoNadCom == &quot;8&quot;){ cClassificacaoNadCom = &quot;Sem Classificação&quot; }
		if (cClassificacaoNadCom == &quot;9&quot;){ cClassificacaoNadCom = &quot;Sem erro&quot; }
		if (cClassificacaoNadCom == &quot;12&quot;){ cClassificacaoNadCom = &quot;Outro&quot; }
		if (cClassificacaoNadCom == &quot;0&quot;){ cClassificacaoNadCom = &quot;&quot; }
		var cClassificacaoNcl = hAPI.getCardValue(&quot;SlcClassificaSolicitacaoNcl&quot;);
		if (cClassificacaoNcl == &quot;1&quot;){ cClassificacaoNcl = &quot;Alteração conceitual&quot; }
		if (cClassificacaoNcl == &quot;2&quot;){ cClassificacaoNcl = &quot;Alteração de digitação&quot; }
		if (cClassificacaoNcl == &quot;3&quot;){ cClassificacaoNcl = &quot;Alteração de expressão&quot; }
		if (cClassificacaoNcl == &quot;4&quot;){ cClassificacaoNcl = &quot;Alteração de lateralidade&quot; }
		if (cClassificacaoNcl == &quot;5&quot;){ cClassificacaoNcl = &quot;Alteração de mascara&quot; }
		if (cClassificacaoNcl == &quot;6&quot;){ cClassificacaoNcl = &quot;Erro da unidade&quot; }
		if (cClassificacaoNcl == &quot;7&quot;){ cClassificacaoNcl = &quot;Não procedente&quot; }
		if (cClassificacaoNcl == &quot;8&quot;){ cClassificacaoNcl = &quot;Sem Classificação&quot; }
		if (cClassificacaoNcl == &quot;9&quot;){ cClassificacaoNcl = &quot;Sem erro&quot; }
		if (cClassificacaoNcl == &quot;12&quot;){ cClassificacaoNcl = &quot;Outro&quot; }
		if (cClassificacaoNcl == &quot;0&quot;){ cClassificacaoNcl = &quot;&quot; }
		//{analise}
		var cAnaliseNadCom = hAPI.getCardValue(&quot;TxtAnaliseNad&quot;);
		var cAnaliseNcl = hAPI.getCardValue(&quot;TxtAnaliseNcl&quot;);
	
	 try{
		 
		 log.info(&quot;entrou no try ###&quot;);
			//Monta mapa com parâmetros do template
		 	var parametros = new java.util.HashMap();
			parametros.put(&quot;Logo&quot;, &quot;http://www.fidi.org.br/download/fidi_logo_azul.png&quot;);
			parametros.put(&quot;medico&quot;, cMedicoNadCom + cMedicoNcl);
			parametros.put(&quot;tipo&quot;, cTipo);
			parametros.put(&quot;unidade&quot;, cUnidadeNadCom + cUnidadeNcl);
			parametros.put(&quot;exame&quot;, cExameNadCom + cExameNcl);
			parametros.put(&quot;matricula&quot;, cMatriculaNadCom + cMatriculaNcl);
			parametros.put(&quot;data&quot;, dDataNadCom + dDataNcl);
			parametros.put(&quot;divergencia&quot;, cDivergenciaNadCom );
			parametros.put(&quot;classificacao&quot;, cClassificacaoNadCom + cClassificacaoNcl);
			parametros.put(&quot;analise&quot;, cAnaliseNadCom + cAnaliseNcl);
			parametros.put(&quot;SERVER_URL&quot;, &quot;http://172.18.200.22:8090&quot;);
		 
			//Este parâmetro é obrigatório e representa o assunto do e-mail
			parametros.put(&quot;subject&quot;, &quot;Não-conformidade de laudo - FIDI&quot;);
		 
			//Monta lista de destinatários
			var destinatarios = new java.util.ArrayList();
			destinatarios.add(&quot;roberto.oliveira.dias@hotmail.com&quot;);
			//destinatarios.add(cMedicoEmailNadCom);
			//destinatarios.add(cMedicoEmailNcl);
			//destinatarios.add(&quot;94373&quot;);
			//destinatarios.add(&quot;93350&quot;);
			//destinatarios.add(cCoordenacaoMedica);

		 
			//Envia e-mail
			notifier.notify(&quot;admin&quot;, &quot;tpl_nad_ncl&quot;, parametros, destinatarios, &quot;text/html&quot;);
		 
		} catch(e){
			log.info(e);
		}
		
	}
	
}</eventDescription>
    </WorkflowProcessEvent>
    <WorkflowProcessEvent>
      <workflowProcessEventPK>
        <companyId>1</companyId>
        <eventId>afterStateLeave</eventId>
        <processId>NAD e NCL</processId>
        <version>1</version>
      </workflowProcessEventPK>
      <eventDescription>function afterStateLeave(sequenceId){&#xd;
	&#xd;
		&#xd;
	var currentUser = getValue(&quot;WKUser&quot;);&#xd;
	var proximaAtividade = getValue(&quot;WKNextState&quot;);&#xd;
	var Atividadeatual = getValue(&quot;WKNumState&quot;);&#xd;
	&#xd;
	hAPI.setCardValue(&quot;TxtResponsavel_Ncl&quot;,currentUser);&#xd;
	hAPI.setCardValue(&quot;AtivAtual&quot;,Atividadeatual);&#xd;
    hAPI.setCardValue(&quot;AtivDest&quot;,proximaAtividade);&#xd;
   &#xd;
	&#xd;
	&#xd;
	//log.info(disparo_email + &quot;*** verificando se a var recebeu o valor convertido em booleanos&quot;)&#xd;
	//log.warn(disparo_email + &quot;*** verificando se a var recebeu o valor convertido em booleanos&quot;)&#xd;
	&#xd;
	/*&#xd;
	let cMedico = hAPI.getCardValue(&quot;ZoMedicos&quot;);&#xd;
	let cTipo = hAPI.getCardValue(&quot;TIPO&quot;);&#xd;
	let cUnidade = hAPI.getCardValue(&quot;ZoUnidade&quot;);&#xd;
	let cExame = hAPI.getCardValue(&quot;ZoExame&quot;);&#xd;
	let cMatricula = hAPI.getCardValue(&quot;TxtMatriculaExame&quot;);&#xd;
	let dData = hAPI.getCardValue(&quot;TxtDataExame&quot;);&#xd;
	let cDivergencia = hAPI.getCardValue(&quot;slcTeor&quot;);&#xd;
	let cClassificacao = hAPI.getCardValue(&quot;SlcClassificaSolicitacao&quot;);&#xd;
	let cAnalise = hAPI.getCardValue(&quot;TxtAnaliseNad&quot;);&#xd;
	&#xd;
	log.info(disparo_email + &quot;*** Verificando as lets&quot; + cMedico + cTipo+ cUnidade)&#xd;
	&#xd;
	&#xd;
    try{&#xd;
		//Monta mapa com parâmetros do template&#xd;
		var parametros = new java.util.HashMap();&#xd;
		parametros.put(&quot;Logo&quot;, &quot;logo.png&quot;);&#xd;
		parametros.put(&quot;medico&quot;, cMedico);&#xd;
		parametros.put(&quot;tipo&quot;, cTipo);&#xd;
		parametros.put(&quot;unidade&quot;, cUnidade);&#xd;
		parametros.put(&quot;exame&quot;, cExame);&#xd;
		parametros.put(&quot;matricula&quot;, cMatricula);&#xd;
		parametros.put(&quot;data&quot;, dData);&#xd;
		parametros.put(&quot;divergencia&quot;, cDivergencia);&#xd;
		parametros.put(&quot;classificacao&quot;, cClassificacao);&#xd;
		parametros.put(&quot;analise&quot;, cAnalise);&#xd;
	 &#xd;
		//Este parâmetro é obrigatório e representa o assunto do e-mail&#xd;
		parametros.put(&quot;subject&quot;, &quot;teste&quot;);&#xd;
	 &#xd;
		//Monta lista de destinatários&#xd;
		var destinatarios = new java.util.ArrayList();&#xd;
		destinatarios.add(&quot;roberto.oliveira.dias@hotmail.com&quot;);&#xd;
		destinatarios.add(&quot;93350&quot;);&#xd;
	 &#xd;
		//Envia e-mail&#xd;
		notifier.notify(&quot;93350&quot;, &quot;tpl_nad_ncl&quot;, parametros, destinatarios, &quot;text/html&quot;);&#xd;
	 &#xd;
	} catch(e){&#xd;
		log.info(e);&#xd;
	}&#xd;
	&#xd;
    &#xd;
    */&#xd;
&#xd;
&#xd;
    &#xd;
		&#xd;
	&#xd;
}</eventDescription>
    </WorkflowProcessEvent>
  </list>
  <list/>
  <list>
    <SwimLane>
      <color>FFFFFF</color>
      <height>420</height>
      <width>1060</width>
      <positionX>20</positionX>
      <positionY>20</positionY>
      <stateName>Divergência de Laudo</stateName>
      <type>1</type>
      <parentSequence>0</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>1</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>d0daae</color>
      <height>140</height>
      <width>1030</width>
      <positionX>50</positionX>
      <positionY>20</positionY>
      <stateName>Area Médica</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>2</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>d6e0d0</color>
      <height>140</height>
      <width>1030</width>
      <positionX>50</positionX>
      <positionY>300</positionY>
      <stateName>Coordenação Médica</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>3</sequence>
      </swimLanePK>
    </SwimLane>
    <SwimLane>
      <color>c9c3ac</color>
      <height>140</height>
      <width>1030</width>
      <positionX>50</positionX>
      <positionY>160</positionY>
      <stateName>Solicitante</stateName>
      <type>2</type>
      <parentSequence>1</parentSequence>
      <swimLanePK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>1</version>
        <sequence>4</sequence>
      </swimLanePK>
    </SwimLane>
  </list>
  <list/>
  <list/>
  <list>
    <ProcessLinkBend>
      <processLinkBendPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <version>127</version>
        <linkSequence>27</linkSequence>
        <bendSequence>1</bendSequence>
      </processLinkBendPK>
      <positionX>242</positionX>
      <positionY>354</positionY>
    </ProcessLinkBend>
  </list>
  <list/>
  <list/>
  <list>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <fieldId>Requerente</fieldId>
      </processFormFieldPK>
      <fieldDescription>Requerente</fieldDescription>
      <slotId>1</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <fieldId>slcTeorNad1</fieldId>
      </processFormFieldPK>
      <fieldDescription>slcTeorNad1</fieldDescription>
      <slotId>2</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <fieldId>TxtDataExame</fieldId>
      </processFormFieldPK>
      <fieldDescription>TxtDataExame</fieldDescription>
      <slotId>3</slotId>
    </ProcessFormField>
    <ProcessFormField>
      <processFormFieldPK>
        <companyId>1</companyId>
        <processId>NAD e NCL</processId>
        <fieldId>ZoMedicos_Nad</fieldId>
      </processFormFieldPK>
      <fieldDescription>ZoMedicos_Nad</fieldDescription>
      <slotId>4</slotId>
    </ProcessFormField>
  </list>
  <list/>
  <list/>
  <list/>
</list>